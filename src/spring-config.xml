<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

    <!-- 定义数据库连接池数据源bean destroy-method="close"的作用是当数据库连接不使用的时候,就把该连接重新放到数据池中,方便下次使用调用 -->
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource"
          destroy-method="close">
        <!-- 设置JDBC驱动名称 -->
        <property name="driverClass" value="com.mysql.jdbc.Driver"/>
        <!-- 设置JDBC连接URL -->
        <property name="jdbcUrl" value="jdbc:mysql://localhost:3306/myblog"/>
        <!-- 设置数据库用户名 -->
        <property name="user" value="root"/>
        <!-- 设置数据库密码 -->
        <property name="password" value="zucc"/>
        <!-- 设置连接池初始值 -->
        <property name="initialPoolSize" value="5"/>
    </bean>

    <bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
        <property name="annotatedClasses">
            <list>
                <value>co.lilpilot.model.TbUserEntity</value>
                <value>co.lilpilot.model.TbArticleEntity</value>
                <value>co.lilpilot.model.TbCommentEntity</value>
                <value>co.lilpilot.model.TbLogEntity</value>
                <value>co.lilpilot.model.TbTagEntity</value>
            </list>
        </property>
        <!-- 数据源 -->
        <property name="dataSource" ref="dataSource"/>
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.connection.url">jdbc:mysql://localhost:3306/myblog</prop>
                <prop key="hibernate.connection.driver_class">com.mysql.jdbc.Driver</prop>
                <prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
                <!--不要用Thread 因为當把事務交由Spring托管時，事務就不是以thread的方式運作了，而是以Spring自已的上下文方式運作-->
                <prop key="hibernate.current_session_context_class">
                    org.springframework.orm.hibernate4.SpringSessionContext
                </prop>
                <!--<prop key="hibernate.current_session_context_class">-->
                <!--org.springframework.orm.hibernate4.SpringSessionContext-->
                <!--</prop>-->
                <!--<prop key="hibernate.show_sql">true</prop>-->
                <!--<prop key="hibernate.c3p0.min_size">5</prop>-->
                <!--<prop key="hibernate.c3p0.max_size">20</prop>-->
                <!--<prop key="hibernate.c3p0.timeout">2000</prop>-->
                <!--<prop key="hibernate.c3p0.max_statements">50</prop>-->
            </props>
        </property>
    </bean>

    <!-- 配置事务管理器 -->
    <bean id="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
        <property name="sessionFactory">
            <ref bean="sessionFactory"/>
        </property>
    </bean>


    <!-- 配置事务的传播特性 -->

    <tx:advice id="txAdvice" transaction-manager="transactionManager">
        <tx:attributes>
            <tx:method name="save*" propagation="REQUIRED"/>
            <tx:method name="update*" propagation="REQUIRED"/>
            <tx:method name="delete*" propagation="REQUIRED"/>
            <tx:method name="*" read-only="true" propagation="REQUIRED"/>
        </tx:attributes>
    </tx:advice>

    <!-- 哪些类的哪些方法参与事务 -->
    <aop:config proxy-target-class="true">
        <!--<aop:advisor  pointcut="execution(* co.lilpilot.dao..*.*(..))" advice-ref="txAdvice"/>-->
        <aop:advisor pointcut="execution(* co.lilpilot.service..*.*(..))" advice-ref="txAdvice"/>
    </aop:config>

    <!-- 自动扫描 -->
    <context:component-scan base-package="co.lilpilot.dao"/>
    <context:component-scan base-package="co.lilpilot.service"/>

    <bean id="userDAO" class="co.lilpilot.dao.impl.UserDAOImpl">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>
    <bean id="tagDAO" class="co.lilpilot.dao.impl.TagDAOImpl">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>
    <bean id="userService" class="co.lilpilot.service.impl.UserServiceImpl">
        <property name="userDAO" ref="userDAO"/>
    </bean>
    <bean id="loginAction" class="co.lilpilot.action.LoginAction">
        <property name="userService" ref="userService"/>
    </bean>
</beans>